{"version":3,"file":"static/js/373.60988b35.chunk.js","mappings":"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","sources":["api.js","pages/MovieDetails/MovieDetails.styled.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKEY = 'ba2cd44587703e13bcb95a3f3a9b39ac';\nconst searchParametrTrendingDay = 'trending/movie/day';\n\nexport const fetchTrendingDay = async () => {\n    const responce = await axios.get(`/${searchParametrTrendingDay}?api_key=${apiKEY}`);\n    return responce.data;\n}\n\n\nexport const fetchSearchMovie = async (value) => {\n    const responce = await axios.get(`/search/movie?api_key=${apiKEY}&language=en-US&include_adult=false&query=${value}`);\n    console.log(responce.data);\n    return responce.data;\n}\n\n\nexport const fetchMovieDetails = async (id) => {\n    const responce = await axios.get(`/movie/${id}?api_key=${apiKEY}&language=en-US`);\n    console.log(responce.data);\n    return responce.data;\n}\n\nexport const fetchActors = async (id) => {\n    const responce = await axios.get(`movie/${id}/credits?api_key=${apiKEY}&language=en-US`);\n        console.log(responce.data);\n    return responce.data;\n}\n\nexport const fetchReviews = async (id) => {\n    const responce = await axios.get(`/movie//${id}/reviews?api_key=${apiKEY}&language=en-US`);\n    console.log(responce.data);\n    return responce.data;\n}\n\n","import styled from \"styled-components\";\n\nexport const ContainerMovieDetails = styled.div`\ndisplay: flex;\ngap: 30px;\npadding: 10px 0;\nborder-bottom: 1px solid grey;\n`;\n\nexport const WrapperForPoster = styled.div`\n  height: 460px;\n    width: 300px;\n    `;\n\nexport const MoviePoster = styled.img`\n    height: 460px;\n    width: 300px;\n    object-fit: cover;\n`;\n\nexport const ContainerAdditionalInfo = styled.div`\nborder-bottom: 1px solid grey;\n`;\n\n\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const GoBackButton = styled(Link)`\ndisplay: flex;\ngap: 10px;\nalign-items: center;\nwidth: fit-content;margin-top: 10px;\npadding: 5px 15px;\nborder: 1px solid grey;\nborder-radius: 4px;\ntext-decoration: none;\nbackground-color: #EFEFEF;\ncolor: black;\n\n:hover, focus {\nbackground-color: #DCD9D9;\n}\n`;\n\n","import { GoBackButton } from './BackLink.styled';\nimport { BsArrowLeft } from 'react-icons/bs';\nimport PropTypes from 'prop-types';\n\n\n export const BackLink = ({ to, children }) => {\n  return (\n    <GoBackButton to={to}>\n      <BsArrowLeft size=\"16\" />\n      {children}\n    </GoBackButton>\n  );\n};\n\nBackLink.propTypes = {\n    to: PropTypes.object,\n    children: PropTypes.string,\n\n}\n  \n","import { Suspense } from \"react\";\n\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieDetails } from 'api';\nimport { ContainerMovieDetails, MoviePoster, ContainerAdditionalInfo, WrapperForPoster } from './MovieDetails.styled';\nimport {BackLink} from 'components/BackLink/BackLink'\n\nimport { useParams, useLocation } from \"react-router-dom\";\nimport { Link, Outlet } from \"react-router-dom\";\n\nconst MovieDetails = () => {\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/\";\n\n    const [currentMovieInfo, setCurrentMovieInfo] = useState({});\n    const [genresName, setCurrentGenresName] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    \n    useEffect(() => {\n        if (!id) {\n            return;\n        }\n        async function getMovieDetails() {\n            try {\n                setIsLoading(true);\n                const responce = await fetchMovieDetails(id);\n                setCurrentMovieInfo(responce);\n                \n                if (responce.genres) {\n                    const movieGenresArr = responce.genres;\n                    if (movieGenresArr.length === 0) {\n                        setCurrentGenresName([\"No information\"]);\n                        return;\n                    }\n                    const genresNameArr = movieGenresArr.map(movieGenre => movieGenre.name);\n                    const genresNameString = genresNameArr.join(', ')\n                    setCurrentGenresName(genresNameString);\n                }\n            }\n            catch (e) {\n                console.log(e);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        };\n        getMovieDetails();\n            \n    }, [id]);\n\n    return (\n        <div>\n            <BackLink to={backLinkHref}>Go back</BackLink>\n            {isLoading && <p>LOADING.....</p>}\n\n            <ContainerMovieDetails>\n                <WrapperForPoster>\n                    {currentMovieInfo.poster_path && !isLoading && <MoviePoster src={`https://image.tmdb.org/t/p/w500${currentMovieInfo.poster_path}`} alt={currentMovieInfo.title} />}\n                    {!currentMovieInfo.poster_path && !isLoading && <MoviePoster src=\"https://aeroclub-issoire.fr/wp-content/uploads/2020/05/image-not-found.jpg\" alt={currentMovieInfo.title} />}\n                </WrapperForPoster>\n                <div>\n                    <h1>{currentMovieInfo.title}</h1>\n                    <p>User Score {`${Math.round(currentMovieInfo.vote_average * 10)}%`}</p>\n                    <h2>Overview</h2>\n                    {currentMovieInfo.overview ? (<p>{currentMovieInfo.overview}</p>) : (<p>No information</p>)}\n                    <h2>Genres</h2>\n                    <p>{genresName}</p>\n                </div>\n            </ContainerMovieDetails>\n\n            <ContainerAdditionalInfo>\n                <h4>Additional information</h4>\n                <ul>\n                    <li>\n                        <Link to=\"cast\">Cast</Link>\n                    </li>\n                    <li>\n                        <Link to=\"reviews\">Reviews</Link>\n                    </li>\n                </ul>\n            </ContainerAdditionalInfo>\n\n            <Suspense fallback={<div>Loading subpage...</div>}>\n                <Outlet />\n            </Suspense>\n        </div>\n    );\n}\n\nexport default MovieDetails;\n"],"names":["axios","apiKEY","fetchTrendingDay","responce","data","fetchSearchMovie","value","console","log","fetchMovieDetails","id","fetchActors","fetchReviews","ContainerMovieDetails","styled","WrapperForPoster","MoviePoster","ContainerAdditionalInfo","GoBackButton","Link","BackLink","to","children","size","useParams","backLinkHref","useLocation","state","from","useState","currentMovieInfo","setCurrentMovieInfo","genresName","setCurrentGenresName","isLoading","setIsLoading","useEffect","genres","movieGenresArr","length","genresNameArr","map","movieGenre","name","genresNameString","join","getMovieDetails","poster_path","src","alt","title","Math","round","vote_average","overview","Suspense","fallback"],"sourceRoot":""}