{"version":3,"file":"static/js/565.76ecaacf.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAGFC,EAAgB,mCAAG,oGACLF,EAAAA,EAAAA,IAAA,WAHO,qBAGP,oBAAmDC,IAD9C,cACtBE,EADsB,yBAErBA,EAASC,MAFY,2CAAH,qDAMhBC,EAAgB,mCAAG,WAAOC,GAAP,uFACLN,EAAAA,EAAAA,IAAA,gCAAmCC,EAAnC,qDAAsFK,IADjF,cACtBH,EADsB,OAE5BI,QAAQC,IAAIL,EAASC,MAFO,kBAGrBD,EAASC,MAHY,2CAAH,sDAOhBK,EAAiB,mCAAG,WAAOC,GAAP,uFACNV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,oBAAkCT,EAAlC,oBADM,cACvBE,EADuB,OAE7BI,QAAQC,IAAIL,EAASC,MAFQ,kBAGtBD,EAASC,MAHa,2CAAH,sDAMjBO,EAAW,mCAAG,WAAOD,GAAP,uFACAV,EAAAA,EAAAA,IAAA,gBAAmBU,EAAnB,4BAAyCT,EAAzC,oBADA,cACjBE,EADiB,OAEnBI,QAAQC,IAAIL,EAASC,MAFF,kBAGhBD,EAASC,MAHO,2CAAH,sDAMXQ,EAAY,mCAAG,WAAOF,GAAP,uFACDV,EAAAA,EAAAA,IAAA,kBAAqBU,EAArB,4BAA2CT,EAA3C,oBADC,cAClBE,EADkB,OAExBI,QAAQC,IAAIL,EAASC,MAFG,kBAGjBD,EAASC,MAHQ,2CAAH,qD,mJC7BZS,EAAaC,EAAAA,GAAAA,IAAH,iHAOVC,EAAiBD,EAAAA,GAAAA,GAAH,+D,kBCmD3B,EAtDa,WAET,IAAQJ,GAAOM,EAAAA,EAAAA,MAAPN,GAER,GAA6BO,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KA2BA,OAzBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,gHAE+BX,EAAAA,EAAAA,IAAYD,GAF3C,UAEcP,EAFd,OAGcoB,EAAapB,EAASqB,KAAKC,KAAI,SAAAC,GAAU,MAAO,CAAEhB,GAAIgB,EAAKhB,GAAIiB,KAAMD,EAAKC,KAAMC,IAAKF,EAAKG,aAAcC,UAAWJ,EAAKI,UAAa,IAC3IvB,QAAQC,IAAIe,GACc,IAAtBA,EAAWQ,OALvB,uBAMYV,EAAS,+BANrB,0BASQF,EAAWI,GATnB,kDAYQhB,QAAQC,IAAR,MAZR,2DALY,sBACZa,EAAS,IACJX,GAFO,mCAqBZsB,EAEH,GAAE,CAACtB,KAGA,yBACKU,GAAS,uBAAIA,KACb,wBACIF,EAAOO,KAAI,SAAAQ,GAAK,OACb,UAAClB,EAAD,WACKkB,EAAML,KACF,SAACf,EAAD,CAAYqB,IAAG,yCAAoCD,EAAML,KAAOO,IAAKF,EAAMN,QAE3E,SAACd,EAAD,CAAYqB,IAAG,6EAAgFC,IAAKF,EAAMN,QAE/G,4BACI,uBAAIM,EAAMN,QACV,uBAAIM,EAAMH,iBARGG,EAAMvB,GADd,OAgBhC,C","sources":["api.js","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst apiKEY = 'ba2cd44587703e13bcb95a3f3a9b39ac';\nconst searchParametrTrendingDay = 'trending/movie/day';\n\nexport const fetchTrendingDay = async () => {\n    const responce = await axios.get(`/${searchParametrTrendingDay}?api_key=${apiKEY}`);\n    return responce.data;\n}\n\n\nexport const fetchSearchMovie = async (value) => {\n    const responce = await axios.get(`/search/movie?api_key=${apiKEY}&language=en-US&include_adult=false&query=${value}`);\n    console.log(responce.data);\n    return responce.data;\n}\n\n\nexport const fetchMovieDetails = async (id) => {\n    const responce = await axios.get(`/movie/${id}?api_key=${apiKEY}&language=en-US`);\n    console.log(responce.data);\n    return responce.data;\n}\n\nexport const fetchActors = async (id) => {\n    const responce = await axios.get(`movie/${id}/credits?api_key=${apiKEY}&language=en-US`);\n        console.log(responce.data);\n    return responce.data;\n}\n\nexport const fetchReviews = async (id) => {\n    const responce = await axios.get(`/movie//${id}/reviews?api_key=${apiKEY}&language=en-US`);\n    console.log(responce.data);\n    return responce.data;\n}\n\n","import styled from \"styled-components\";\n\nexport const ActorPhoto = styled.img`\n    width: 120px;\n    height: 160px;\n    object-fit: cover;\n    padding-right: 10px;\n`;\n\nexport const ActorsListItem = styled.li`\ndisplay: flex;\npadding-bottom: 10px;\n`;\n\n","import { useEffect, useState } from \"react\";\nimport { fetchActors } from 'api';\nimport {ActorPhoto, ActorsListItem} from './Cast.styled'\n\nimport { useParams } from \"react-router-dom\";\n\nconst Cast = () => {\n    \n    const { id } = useParams();\n\n    const [actors, setSActors] = useState([]);\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setError(\"\");\n        if (!id) {\n            return;\n        }\n        async function getActors() {\n            try {\n                const responce = await fetchActors(id);\n                const actorsInfo = responce.cast.map(item => { return { id: item.id, name: item.name, img: item.profile_path, character: item.character } })\n                console.log(actorsInfo);\n                if (actorsInfo.length === 0) {\n                    setError(\"No information about actors\");\n                    return;\n                }\n                setSActors(actorsInfo);\n            }\n            catch (e) {\n                console.log(e);\n            }\n        };\n\n        getActors()\n\n    }, [id]);\n\n    return (\n        <div>\n            {error ? (<p>{error}</p>) : \n            (<ul>\n                {actors.map(actor => \n                    <ActorsListItem key={actor.id}>\n                        {actor.img ?\n                            (<ActorPhoto src={`https://image.tmdb.org/t/p/w500${actor.img}`} alt={actor.name} />)\n                            :\n                            (<ActorPhoto src={`https://aeroclub-issoire.fr/wp-content/uploads/2020/05/image-not-found.jpg`} alt={actor.name} />)\n                        }\n                        <div>\n                            <p>{actor.name}</p>\n                            <p>{actor.character}</p>\n                        </div>\n                        \n                    </ActorsListItem>)}\n                </ul>)}\n        </div>\n    );\n}\n\nexport default Cast;"],"names":["axios","apiKEY","fetchTrendingDay","responce","data","fetchSearchMovie","value","console","log","fetchMovieDetails","id","fetchActors","fetchReviews","ActorPhoto","styled","ActorsListItem","useParams","useState","actors","setSActors","error","setError","useEffect","actorsInfo","cast","map","item","name","img","profile_path","character","length","getActors","actor","src","alt"],"sourceRoot":""}